name: Deploy

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Install dependencies
        run: npm ci
        working-directory: backend

      - name: Build project
        run: npm run build
        working-directory: backend

      - name: Run tests
        run: npm test
        working-directory: backend

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH and Docker
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update system and install required packages
            sudo apt-get update
            sudo apt-get install -y git curl

            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            # Clone or update the repo
            if [ ! -d "~/INFS803_personal-finance-tracker" ]; then
              git clone https://github.com/itsLucas-h/INFS803_personal-finance-tracker.git ~/INFS803_personal-finance-tracker
            fi

            cd ~/INFS803_personal-finance-tracker
            git fetch origin main
            git reset --hard origin/main

            # === Backend ===
            docker stop backend || true
            docker rm backend || true
            docker build -t backend ./backend
            docker run -d -p 5000:5000 --name backend backend

            # === Frontend ===
            docker stop frontend || true
            docker rm frontend || true
            docker build -t frontend ./frontend
            docker run -d -p 3000:80 --name frontend frontend

            docker image prune -f
            docker container prune -f
